mythril.mythril.mythril_analyzer [CRITICAL]: Exception occurred, aborting analysis. Please report this issue to the Mythril GitHub page.
Traceback (most recent call last):
  File "/home/ubuntu/private-mythril/mythril/analysis/solver.py", line 71, in get_transaction_sequence
    model = get_model(tx_constraints, minimize=minimize)
  File "/home/ubuntu/private-mythril/mythril/support/model.py", line 42, in get_model
    raise UnsatError
mythril.exceptions.UnsatError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/private-mythril/mythril/analysis/module/modules/hardcoded_gas_values.py", line 67, in _analyze_state
    transaction_sequence = solver.get_transaction_sequence(
  File "/home/ubuntu/private-mythril/mythril/analysis/solver.py", line 73, in get_transaction_sequence
    raise UnsatError
mythril.exceptions.UnsatError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/private-mythril/mythril/analysis/solver.py", line 71, in get_transaction_sequence
    model = get_model(tx_constraints, minimize=minimize)
  File "/home/ubuntu/private-mythril/mythril/support/model.py", line 42, in get_model
    raise UnsatError
mythril.exceptions.UnsatError

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/ubuntu/private-mythril/mythril/mythril/mythril_analyzer.py", line 141, in fire_lasers
    sym = SymExecWrapper(
  File "/home/ubuntu/private-mythril/mythril/analysis/symbolic.py", line 172, in __init__
    self.laser.sym_exec(
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 201, in sym_exec
    self.execute_transactions(created_account.address)
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 226, in execute_transactions
    self._execute_transactions(address)
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 272, in _execute_transactions
    execute_message_call(self, address, func_hashes=func_hashes)
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/transaction/symbolic.py", line 151, in execute_message_call
    laser_evm.exec()
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 314, in exec
    new_states, op_code = self.execute_state(global_state)
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 405, in execute_state
    self._execute_pre_hook(op_code, global_state)
  File "/home/ubuntu/private-mythril/mythril/laser/ethereum/svm.py", line 723, in _execute_pre_hook
    hook(global_state)
  File "/home/ubuntu/private-mythril/mythril/analysis/module/base.py", line 90, in execute
    result = self._execute(target)
  File "/home/ubuntu/private-mythril/mythril/analysis/module/modules/hardcoded_gas_values.py", line 50, in _execute
    return self._analyze_state(state)
  File "/home/ubuntu/private-mythril/mythril/analysis/module/modules/hardcoded_gas_values.py", line 101, in _analyze_state
    transaction_sequence = solver.get_transaction_sequence(
  File "/home/ubuntu/private-mythril/mythril/analysis/solver.py", line 73, in get_transaction_sequence
    raise UnsatError
mythril.exceptions.UnsatError

{"error": null, "issues": [{"address": 480, "code": "if(luckyNumberOfAddress(msg.sender) == LuckyNumber){ //check if it equals 7\n            winner[msg.sender] = true; // every address can only win once\n            \n            uint win=msg.value*7; //win = 7 times the ticket price\n            \n            if(win>this.balance) //if the balance isnt sufficient...\n                win=this.balance; //...send everything we've got\n            msg.sender.transfer(win);\n        }", "contract": "OpenAddressLottery", "description": "Potential denial-of-service if block gas limit is reached.\nAn external call is executed in a loop.", "filename": "/home/ubuntu/smartbugs-curated/dataset/other/open_address_lottery.sol", "function": "fallback", "lineno": 53, "max_gas_used": 32628, "min_gas_used": 10601, "severity": "Low", "sourceMap": "2028:424", "swc-id": "128", "title": "Potential denial-of-service if block gas limit is reached", "tx_sequence": null}, {"address": 1221, "code": "block.difficulty*(uint)(block.coinbase)", "contract": "OpenAddressLottery", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "/home/ubuntu/smartbugs-curated/dataset/other/open_address_lottery.sol", "function": "forceReseed()", "lineno": 94, "max_gas_used": 156726, "min_gas_used": 34795, "severity": "High", "sourceMap": ":39", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040526007600355341561001457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a76080604051908101604052804173ffffffffffffffffffffffffffffffffffffffff168152602001448152602001458152602001428152506100ac64010000000002610519176401000000009004565b6100fe565b8060000151816020015182604001518360600151604051808581526020018481526020018381526020018281526020019450505050506040518091039020600190046001819055504360028190555050565b6105978061010d6000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806337354a68146100d757806341c0e1b51461012457806380ca7aec14610139578063d11711a21461014e575b67016345785d8a000034101580156100c757506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156100d5576100d4610158565b5b005b34156100e257600080fd5b61010e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061030c565b6040518082815260200191505060405180910390f35b341561012f57600080fd5b6101376103ab565b005b341561014457600080fd5b61014c61041f565b005b610156610158565b005b600067016345785d8a000034101561016f57610309565b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156101ce57600080fd5b6003546101da3361030c565b14156102b9576001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506007340290503073ffffffffffffffffffffffffffffffffffffffff1631811115610278573073ffffffffffffffffffffffffffffffffffffffff163190505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156102b857600080fd5b5b6103e860025443031115610308576103076080604051908101604052804173ffffffffffffffffffffffffffffffffffffffff16815260200144815260200145815260200142815250610519565b5b5b50565b600060088273ffffffffffffffffffffffffffffffffffffffff1660015460405180838152602001828152602001925050506040518091039020600060208110151561035457fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090048115156103a357fe5b069050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561040657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561047c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000018190555060014303406001900481600101819055504173ffffffffffffffffffffffffffffffffffffffff164402816002018190555060073a0281600301819055506105168160806040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050610519565b50565b80600001518160200151826040015183606001516040518085815260200184815260200183815260200182815260200194505050505060405180910390206001900460018190555043600281905550505600a165627a7a72305820eaa84e1fea9faad474138e160086ce13e3304739af5c7cedefab6f8eeb3607490029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x80ca7aec", "input": "0x80ca7aec", "name": "forceReseed()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 1233, "code": "tx.gasprice * 7", "contract": "OpenAddressLottery", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "/home/ubuntu/smartbugs-curated/dataset/other/open_address_lottery.sol", "function": "forceReseed()", "lineno": 95, "max_gas_used": 156726, "min_gas_used": 34795, "severity": "High", "sourceMap": ":15", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040526007600355341561001457600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a76080604051908101604052804173ffffffffffffffffffffffffffffffffffffffff168152602001448152602001458152602001428152506100ac64010000000002610519176401000000009004565b6100fe565b8060000151816020015182604001518360600151604051808581526020018481526020018381526020018281526020019450505050506040518091039020600190046001819055504360028190555050565b6105978061010d6000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806337354a68146100d757806341c0e1b51461012457806380ca7aec14610139578063d11711a21461014e575b67016345785d8a000034101580156100c757506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b156100d5576100d4610158565b5b005b34156100e257600080fd5b61010e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061030c565b6040518082815260200191505060405180910390f35b341561012f57600080fd5b6101376103ab565b005b341561014457600080fd5b61014c61041f565b005b610156610158565b005b600067016345785d8a000034101561016f57610309565b60001515600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615151415156101ce57600080fd5b6003546101da3361030c565b14156102b9576001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506007340290503073ffffffffffffffffffffffffffffffffffffffff1631811115610278573073ffffffffffffffffffffffffffffffffffffffff163190505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015156102b857600080fd5b5b6103e860025443031115610308576103076080604051908101604052804173ffffffffffffffffffffffffffffffffffffffff16815260200144815260200145815260200142815250610519565b5b5b50565b600060088273ffffffffffffffffffffffffffffffffffffffff1660015460405180838152602001828152602001925050506040518091039020600060208110151561035457fe5b1a7f0100000000000000000000000000000000000000000000000000000000000000027f010000000000000000000000000000000000000000000000000000000000000090048115156103a357fe5b069050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561040657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561047c57600080fd5b3373ffffffffffffffffffffffffffffffffffffffff16816000018190555060014303406001900481600101819055504173ffffffffffffffffffffffffffffffffffffffff164402816002018190555060073a0281600301819055506105168160806040519081016040529081600082015481526020016001820154815260200160028201548152602001600382015481525050610519565b50565b80600001518160200151826040015183606001516040518085815260200184815260200183815260200182815260200194505050505060405180910390206001900460018190555043600281905550505600a165627a7a72305820eaa84e1fea9faad474138e160086ce13e3304739af5c7cedefab6f8eeb3607490029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x80ca7aec", "input": "0x80ca7aec", "name": "forceReseed()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}], "success": true}
Command exited with non-zero status 1
61.13user 0.88system 1:01.25elapsed 101%CPU (0avgtext+0avgdata 360760maxresident)k
8inputs+48outputs (0major+91140minor)pagefaults 0swaps
